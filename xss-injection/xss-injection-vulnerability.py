import requests
from selenium import webdriver
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.chrome.service import Service

def readFile(fileName):
  """Reads a file and returns a list of read lines
  Parameters:
  fileName (string) -- the name of the file (path and format included)
  """
  lines = []
  try:
    with open(fileName, 'r') as f:
      for line in f:
        lines.append(line.replace('\n', ''))
  except:
    raise Exception('File', urlsFile, 'doesn\'t exists')
  return lines

def getRequest(url, queryParams):
  if url:
    try:
      r = requests.get(url, params=queryParams)
      r.raise_for_status()
      return r
    except requests.exceptions.HTTPError as err:
      raise SystemExit(err)

def isXssInjection(url, output):
  if 'alert(1)' in output:
    try:
      driver.get(url)
      alert = driver.switch_to.alert
      alertText = alert.text
      alert.dismiss()
      return alertText == '1'
    except:
      return False
  return False


driver_manager = Service(ChromeDriverManager().install())
driver = webdriver.Chrome(service=driver_manager)

httpString = 'http://'
host = input('\n\nInsert the host (default http://localhost): ')
if not host:
  host = 'http://localhost'
else:
  while not host.startswith(httpString) or len(host) <= len(httpString):
    host = input('Host not valid.\nInsert a valid host (ex. http://localhost): ')

urlsFile = input('Insert the URLs file name (default urls.txt): ')
if not urlsFile:
  urlsFile = 'urls.txt'
payloadsFile = input('Insert the payloads file name (default payloads.txt): ')
if not payloadsFile:
  payloadsFile = 'payloads.txt'

urls = readFile(urlsFile)
payloads = readFile(payloadsFile)

# Expected url format: /some/random/url/with-page.php:param1
for url in urls:
  splitted = url.split(':')
  if len(splitted) == 2:
    baseUrl = splitted[0]
    param = splitted[1]

    if param:
      completeUrl = host + baseUrl
      for payload in payloads:
        requestData = {}
        requestData[param] = payload

        result = getRequest(completeUrl, requestData)
        if result.ok and result.text:
          payload = requestData[param]
          if isXssInjection(result.url, result.text):
            print('Found a xss injection on the "' + param + '" parameter in the "' + url + '" url using the "' + payload + '" payload')

driver.quit()
